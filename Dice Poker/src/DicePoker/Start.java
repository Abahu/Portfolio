/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DicePoker;

import java.net.Inet4Address;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;
import javax.swing.JLabel;

/**
 *
 * @author DM
 */
public class Start extends javax.swing.JFrame {

    /**
     * Creates new form Start
     */
    public Start() {
        initComponents();
    }
    public String textField;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startOffline = new javax.swing.JButton();
        startOnline = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        shouldHostButton = new javax.swing.JCheckBox();
        IPAddressField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        IOTest = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 400));
        setSize(new java.awt.Dimension(600, 600));

        startOffline.setText("Start Offline");
        startOffline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startOfflineActionPerformed(evt);
            }
        });

        startOnline.setText("Start Multiplayer");
        startOnline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startOnlineActionPerformed(evt);
            }
        });

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        shouldHostButton.setText("Host Game");
        shouldHostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shouldHostButtonActionPerformed(evt);
            }
        });

        IPAddressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IPAddressFieldActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setText("IP Address:");
        jScrollPane1.setViewportView(jTextPane1);

        IOTest.setText("A");
        IOTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IOTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startOffline, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpButton, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                    .addComponent(startOnline, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(IPAddressField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(shouldHostButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(IOTest, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(IOTest, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startOffline, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IPAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(shouldHostButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(helpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startOfflineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startOfflineActionPerformed
        Entry.gameThread.interrupt();
    }//GEN-LAST:event_startOfflineActionPerformed

    private void startOnlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startOnlineActionPerformed
        boolean shouldHost = shouldHostButton.isSelected();
        Inet4Address ip = null;
        try
        {
        ip = (IPAddressField.getText() == "") ? 
                (Inet4Address) Inet4Address.getLocalHost() : 
                (Inet4Address) Inet4Address.getByName(IPAddressField.getText());
        }
        catch(UnknownHostException ex)
        {
            System.out.println(ex);
        }
        SMT smt = new SMT();
        smt.sm(shouldHost, ip);
        Thread smtThread = new Thread(smt, "SMT");
        smtThread.start();
    }//GEN-LAST:event_startOnlineActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        String html1 = "<html><body style='width: ";
        String html2 = "px'>";
        String s = "You don't need help :)";
        JLabel lab = new JLabel(html1 + 200 + html2 + s);
        lab.setLocation(this.getLocation());
        JOptionPane.showMessageDialog(this, lab, "Help", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_helpButtonActionPerformed

    private void IPAddressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IPAddressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IPAddressFieldActionPerformed

    private void shouldHostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shouldHostButtonActionPerformed
        
    }//GEN-LAST:event_shouldHostButtonActionPerformed

    private void IOTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IOTestActionPerformed
        TextPrompt tx = new TextPrompt(this, true);
        tx.setVisible(true);
        char[] c = this.textField.toCharArray();
        byte[] data = new byte[c.length * 2];
        java.nio.ByteBuffer buff = java.nio.ByteBuffer.wrap(data);
        for (char d : c)
            buff.putChar(d);
        Util.save(Util.TEXT_PATH, data);
    }//GEN-LAST:event_IOTestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Start().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton IOTest;
    private javax.swing.JTextField IPAddressField;
    private javax.swing.JButton helpButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JCheckBox shouldHostButton;
    private javax.swing.JButton startOffline;
    private javax.swing.JButton startOnline;
    // End of variables declaration//GEN-END:variables
}
